# -*- coding: utf-8 -*-
"""week 9.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/13Fe14-7oV2QsP4782mc4d3Ju24pEc4rA
"""

import csv
import time

# Initialize board
def initialize_board():
    return [[" " for _ in range(3)] for _ in range(3)]

# Print board
def print_board(board):
    for row in board:
        print("|".join(row))
        print("-" * 5)

# Check for a winner
def check_winner(board, player):
    for i in range(3):
        if all([cell == player for cell in board[i]]) or all([board[j][i] == player for j in range(3)]):
            return True
    if board[0][0] == board[1][1] == board[2][2] == player or board[0][2] == board[1][1] == board[2][0] == player:
        return True
    return False

# Check for a draw
def check_draw(board):
    return all(all(cell != " " for cell in row) for row in board)

# Log game result
def log_game_result(game_id, winner, moves, start_time, end_time):
    with open('tic_tac_toe_logs.csv', 'a', newline='') as file:
        writer = csv.writer(file)
        writer.writerow([game_id, winner, moves, end_time - start_time])

# Main game function
def main():
    game_id = 1
    while True:
        board = initialize_board()
        current_player = "X"
        moves = 0
        start_time = time.time()
        game_over = False

        while not game_over:
            print_board(board)
            row, col = map(int, input(f"Player {current_player}, enter your move (row col): ").split())
            if 0 <= row < 3 and 0 <= col < 3 and board[row][col] == " ":
                board[row][col] = current_player
                moves += 1

                if check_winner(board, current_player):
                    end_time = time.time()
                    print_board(board)
                    print(f"Player {current_player} wins!")
                    log_game_result(game_id, current_player, moves, start_time, end_time)
                    game_over = True
                elif check_draw(board):
                    end_time = time.time()
                    print_board(board)
                    print("It's a draw!")
                    log_game_result(game_id, "Draw", moves, start_time, end_time)
                    game_over = True
                else:
                    current_player = "O" if current_player == "X" else "X"
            else:
                print("Invalid move. Try again.")

        game_id += 1
        if input("Play another game? (y/n): ").lower() != 'y':
            break

if __name__ == "__main__":
    main()