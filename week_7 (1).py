# -*- coding: utf-8 -*-
"""week 7.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18crtRSrPODFFXm705F2q-QJFGNF2iKho
"""

import random

class Player:
    def make_move(self, board):
        pass

class HumanPlayer(Player):
    def make_move(self, board):
        move = input("Enter your move (row, col): ")
        return tuple(map(int, move.split(',')))

class BotPlayer(Player):
    def make_move(self, board):
        empty_positions = [(i, j) for i in range(3) for j in range(3) if board[i][j] == ' ']
        return random.choice(empty_positions)

class TicTacToe:
    def __init__(self, player1, player2):
        self.board = [[' ' for _ in range(3)] for _ in range(3)]
        self.current_player = player1
        self.other_player = player2

    def switch_player(self):
        self.current_player, self.other_player = self.other_player, self.current_player

    def play_game(self):
        while not self.is_game_over():
            row, col = self.current_player.make_move(self.board)
            self.board[row][col] = 'X' if self.current_player == player1 else 'O'
            self.switch_player()
            self.print_board()

        print("Game over!")

    def is_game_over(self):
        # Add logic to check for winner or draw
        pass

    def print_board(self):
        for row in self.board:
            print(' | '.join(row))
            print('-' * 5)

# Example usage
player1 = HumanPlayer()
player2 = BotPlayer()  # Or HumanPlayer() for a two-player game
game = TicTacToe(player1, player2)
game.play_game()